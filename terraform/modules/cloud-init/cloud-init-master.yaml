#cloud-config
package_update: true
package_upgrade: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release

users:
  - name: cluster
    ssh-authorized-keys:
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL5wQfvU8nPyWuuFU87m39QUkE2X+Lfqk3VxN4dvKwfc ajaorqb@gmail.com"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJxMut6GKRjgrfgZ5xQJyjy5QtliIshWWXSuGicZ4M6y ajaorqb@gmail.com"
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash

write_files:
  - path: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

runcmd:
  # Load kernel modules
  - modprobe overlay
  - modprobe br_netfilter

  # Configure sysctl parameters
  - echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/k8s.conf
  - echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.d/k8s.conf
  - echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.d/k8s.conf
  - sysctl --system

  # create keyrings folder
  - mkdir -p -m 755 /etc/apt/keyrings

  # Add Kubernetes apt repository
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

  # install containerd runtime
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
  - apt-get update
  - apt-get install -y containerd.io
  - mkdir -p /etc/containerd
  - systemctl start containerd
  - containerd config default > /etc/containerd/config.toml
  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
  - systemctl restart containerd
  - systemctl enable containerd

  # Install Kubernetes components
  - apt-get update
  - apt-get install -y kubelet kubeadm kubectl
  - apt-mark hold kubelet kubeadm kubectl

  # Initialize the cluster
  - kubeadm init --pod-network-cidr=10.244.0.0/16
  - mkdir -p /home/cluster/.kube
  - cp /etc/kubernetes/admin.conf /home/cluster/.kube/config
  - chown -R cluster:cluster /home/cluster/.kube

  # Install Flannel CNI
  - kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
